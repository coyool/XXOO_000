C51 COMPILER V9.00   SSP                                                                   09/16/2014 17:53:00 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SSP
OBJECT MODULE PLACED IN ..\..\SSP.obj
COMPILER INVOKED BY: D:\Program Files\keil4\C51\BIN\C51.EXE SSP.c OMF2 BROWSE DEBUG OBJECT(..\..\SSP.obj)

line level    source

   1          /*********************************************************************
   2           *
   3           *           Sector Self-Program Module Task
   4           *
   5           *********************************************************************
   6           * FileName:        SSP.c
   7           * Dependencies:    Compiler.h
   8           * Processor:       SH99F01
   9           * Complier:        Keil C51 v9.00
  10           * Company:         Sinowealth Electronic, Inc.
  11           *
  12           * Software License Agreement
  13           *
  14           * This software is owned by Sinowealth Electronic Inc. ("Sinowealth") 
  15           * and is supplied to you for use exclusively as described in the 
  16           * associated software agreement.  This software is protected by 
  17           * software and other intellectual property laws.  Any use in 
  18           * violation of the software license may subject the user to criminal 
  19           * sanctions as well as civil liability.  Copyright 2009 Sinowealth
  20           * Electronic Inc.  All rights reserved.
  21           *
  22           * This software is provided "AS IS."  SINOWEALTH DISCLAIMS ALL 
  23           * WARRANTIES, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, NOT LIMITED 
  24           * TO MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND 
  25           * INFRINGEMENT.  Sinowealth shall in no event be liable for special, 
  26           * incidental, or consequential damages.
  27           *
  28           *
  29           *
  30           * Author               Date           Comment
  31           *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  32           * Ellie Fan            2010/7/9           Original  
  33           * Joseph Zhou          2011/3/21          Modify                                  
  34           ********************************************************************/
  35          
  36          #include  <SH99F01.h>
  37          #include  "MAIN.h"
  38          #include  "absacc.h"
  39          #include  "SSP.h"
  40          
  41          /****************************************************************************
  42           * Function:            uchar SSP_Read(uint adr)
  43           * Input Parameter:     adr      - physical address of flash memeory
  44           * OutPut Parameter:    None
  45           * Return Value:        1 byte data
  46           * Description:         This function read a byte of data from Flash(EEPROM)
  47           ***************************************************************************/
  48          
  49           // 2014/6/5,  SSP function bypass
  50          
  51           #if 0
              /////////////////////////////////////
              
              uchar SSP_Read(uint adr)
              {        
C51 COMPILER V9.00   SSP                                                                   09/16/2014 17:53:00 PAGE 2   

                      uchar datatemp;
                      datatemp = CBYTE[adr];
                      return datatemp;
              }
              
              /****************************************************************************
               * Function:            void SSP_Write(uint adr, uchar dat)
               * Input Parameter:     adr      - physical address of flash memeory
               *                      dat      - data to be wirte
               * OutPut Parameter:    None
               * Return Value:        None
               * Description:         This function writes a byte of data into Flash
               ***************************************************************************/
              void SSP_Write(uint adr, uchar dat)
              {
                  EA = 0;      
                  FLASHCON = 0x01;                    // EEPROM block
                      XPAGE = (uchar)(adr>>8);        //page and offset
                      IB_OFFSET = (uchar)adr;
                      IB_DATA = dat;
              
                      IB_CON1 = 0x6E;   //Program
                      IB_CON2 = 0x05;   // >1MHz      
                      IB_CON3 = 0x0A;   //
                      IB_CON4 = 0x09;
                      IB_CON5 = 0x06; 
                      
                      NOP
                      NOP
                      NOP
                      NOP       
                      EA = 1;
                      FLASHCON = 0x00;        
              }
              
              
              /**************************************************************************
               * Function:          SSP_Erase(uchar page)
               * Input parameter:   page      - sector index of flash memory 
               * Output parameter:  None
               * Return Value:      None
               * Description:       This funcition erases a sector of EEPROM
               **************************************************************************/
              void SSP_Erase(uchar page)
              {  
                  EA = 0;   
                      FLASHCON = 0x01;                // EEPROM block
                      XPAGE = page;      // page for Erase
              
                      IB_CON1 = 0xE6;    //Erase
                      IB_CON2 = 0x05;    // >1MHz     
                      IB_CON3 = 0x0A;    //
                      IB_CON4 = 0x09;
                      IB_CON5 = 0x06;
              
                  NOP
                      NOP
                      NOP
                      NOP
                      FLASHCON = 0x00;
                  EA = 1;     
              
C51 COMPILER V9.00   SSP                                                                   09/16/2014 17:53:00 PAGE 3   

              }
              
              
              
              /**************************************************************************
               * Function:          SSP_CopyPage(uchar from, uchar to, uchar start, uchar end)
               * Input parameter:   from       -  source sector index 
                                                        to         -  destination sector index
                                                start      -  the start offset address in a sector   
                                                        end        -  the end offset address in a sector
               * Output parameter:  None       
               * Return Value:      None       
               * Description:       This funcition copy the data(between start offset and end offset) from the souce sec
             -tor to the destination section 
               **************************************************************************/
              void SSP_CopyPage(uchar from, uchar to, uchar start, uchar end)
              {
                      uint data addr_from, addr_to;
                      uint data addr = start;
                      EA = 0;
                      FLASHCON = 0x01;                        // EEPROM block
              
                  addr_from = from*PAGE_SIZE+start;    // calc address
                  addr_to = to*PAGE_SIZE + start;
              
                      XPAGE = to;              //page and offset
                      IB_OFFSET = start;
              
                      while(addr<=end)
                      {
                              RSTSTAT = 0x00;            //  eat dog          
                      IB_DATA = SSP_Read(addr_from);  
                      
                              IB_CON1 = 0x6E; //Program
                              IB_CON2 = 0x5;  // >1MHz        
                      IB_CON3 = 0xA;  //
                      IB_CON4 = 0x9;
                      IB_CON5 = 0x6;  
                      
                          NOP
                              NOP
                              NOP
                              NOP
              
                              ++IB_OFFSET;
                              if(IB_OFFSET==0)
                                      ++XPAGE;
              
                              ++addr_from;
                              ++addr_to;
                              ++addr;
                      }
                      FLASHCON = 0x00;
                  EA = 1;     
              }
              
              
              
              
              /**************************************************************************
               * Function:          void Write_FLASH(uint adr, uchar dat)
               * Input parameter:   addr- data address; dat 
C51 COMPILER V9.00   SSP                                                                   09/16/2014 17:53:00 PAGE 4   

               * Output parameter:  None
               * Return Value:      None
               * Description:       This funcition is to write one byte data to flash
               **************************************************************************/
              void Write_FLASH(uint adr, uchar dat)
              {
                      EA = 0;     
                  FLASHCON = 0X00;            // CODE block
                      XPAGE = (uchar)(adr>>8);        //page and offset
                      IB_OFFSET = (uchar)adr;
                      IB_DATA = dat;
              
                      IB_CON1 = 0x6E;   //Program
                      IB_CON2 = 0x05;   // >1MHz      
                      IB_CON3 = 0x0A;   //
                      IB_CON4 = 0x09;
                      IB_CON5 = 0x06; 
                      
                      NOP
                      NOP
                      NOP
                      NOP       
                      EA = 1; 
              }
              
              /**************************************************************************
               * Function:          void Erase_FLASH(uchar page)
               * Input parameter:   page      - sector index of flash memory 
               * Output parameter:  None
               * Return Value:      None
               * Description:       This funcition erases a sector of flash
               **************************************************************************/
              
              void Erase_FLASH(uchar page)
              {
                      EA = 0;
                      FLASHCON = 0X00;                // CODE block
                      XPAGE = (page<<2);
              
                      IB_CON1 = 0xE6;    //Erase
                      IB_CON2 = 0x05;    // >1MHz     
                      IB_CON3 = 0x0A;    //
                      IB_CON4 = 0x09;
                      IB_CON5 = 0x06;
              
                  NOP
                      NOP
                      NOP
                      NOP
                  EA = 1;     
                      XPAGE = 0;
              }
              
              /////////////////////////////////////
              #endif
 234          
 235          
 236          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
C51 COMPILER V9.00   SSP                                                                   09/16/2014 17:53:00 PAGE 5   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
