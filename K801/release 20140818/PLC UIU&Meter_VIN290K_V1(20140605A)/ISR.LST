C51 COMPILER V9.00   ISR                                                                   09/11/2014 17:34:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ISR
OBJECT MODULE PLACED IN ..\ISR.obj
COMPILER INVOKED BY: D:\Program Files\keil4\C51\BIN\C51.EXE ISR.c OMF2 BROWSE DEBUG OBJECT(..\ISR.obj)

line level    source

   1          
   2          /*********************************************************************
   3           *                      Interrupt Service Routines 
   4           *********************************************************************
   5           * FileName:        ISR.c
   6           * Dependencies:    SH99F01.h
   7           *                                      MAIN.h
   8           *                  UART.h
   9           *                  PLT.h
  10           * Company:         Sinowealth Micro Electronics ltd
  11           *
  12           * All rights reserved.
  13           *
  14           * Author           Date         Comment
  15           *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  16           * robbie.zhang    2010.4.13       Version 1.0
  17           ********************************************************************/
  18          
  19          #include  <SH99F01.h>
  20          #include  "MAIN.h"
  21          #include  "UART.h"
  22          #include  "PLT.h"
  23          
  24          uint Timer_count1=0;
  25          
  26          void ISR_OVL(void) interrupt 15        
  27          {
  28   1              while(1);       // go watch dog
  29   1      }
  30          
  31          
  32          void ISR_TIMER0(void) interrupt 1        // 1ms   
  33          {
  34   1              EA = 0;
  35   1              TL0     = -TIMER0;    //wait 1ms        start const = 0xFFFF - 16000
  36   1              TH0     = (-TIMER0)>>8; 
  37   1      
  38   1              Timer_count++;
  39   1              PLT_TimerTask();
  40   1      
  41   1              if(get_local_addr_timeout && get_local_addr_timeout!=0xFFFF)                      //receive flow timeout
  42   1                       --get_local_addr_timeout; 
  43   1      
  44   1              Timer_count1++;
  45   1              if(Timer_count1>=1000)  // 1s
  46   1              { 
  47   2                      Timer_count1 = 0;
  48   2                      uart_tx_idle_timeout++;
  49   2                      uart_rx_idle_timeout++;
  50   2              }
  51   1      
  52   1              EA = 1;
  53   1      }
  54          
  55          
C51 COMPILER V9.00   ISR                                                                   09/11/2014 17:34:34 PAGE 2   

  56          void ISR_INT1(void) interrupt 2
  57          {
  58   1              EA = 0;
  59   1              EX1 = 0;
  60   1          zc_flag = 1;
  61   1              EA = 1;
  62   1      }
  63          
  64          void ISR_UART(void) interrupt 4          
  65          {
  66   1              EA = 0;
  67   1              ES = 0;
  68   1              if(RI)     //UART Rev_flag
  69   1              {               
  70   2                      if (!uart_RI_start)
  71   2                      {
  72   3                              ACC = SBUF;
  73   3                              if(P==RB8)               //∆Ê≈º–£—È“ª÷¬
  74   3                              {
  75   4                                uart_trans.uart_ptr = 0;
  76   4                                uart_trans.uart_buf[uart_trans.uart_ptr] = SBUF;
  77   4                                uart_trans.uart_ptr++;
  78   4                                uart_trans.uart_timeout = UART_DELAY;          //UART_DELAY = 20                                
  79   4                                uart_RI_start = 1;    
  80   4                              }
  81   3                              else
  82   3                                ES = 1;       // enable again                                                                         
  83   3                      }
  84   2                      RI = 0;
  85   2              }
  86   1              //ES = 1; //if RX complete then wait for TX complete then enable ES = 1 again   
  87   1              EA = 1;
  88   1      }
  89          
  90          
  91          
  92          void ISR_PLT(void) interrupt 7
  93          {
  94   1              EA = 0;
  95   1              if(TXINT)                                               //Transmit interrupt
  96   1              {
  97   2                      TXINT = 0;
  98   2                      tx_flag = 1;
  99   2              }
 100   1              if(RXINT)       
 101   1              {
 102   2                      RXINT = 0;
 103   2                      rx_flag = 1;
 104   2              }
 105   1              EA = 1;
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    289    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.00   ISR                                                                   09/11/2014 17:34:34 PAGE 3   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
